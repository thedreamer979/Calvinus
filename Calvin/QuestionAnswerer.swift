import Darwin
import Foundation
struct QuestionAnswerer {
    /// Creates a String in response to another String.
    func responseTo(question: String) -> String {
        let lowerQuestion = question.lowercased()
        let trimmedQuestion = lowerQuestion.trimmingCharacters(in: .whitespaces)
        switch trimmedQuestion {
            
//mots pr√©sents dans les Strings (v√©rifi√©s avant de passer au reste)
        case let x where (x.range(of: "siri") != nil):
            return "Quelle abomination! Ne r√©p√®te plus jamais ce mot devant moi!"
            
        case let x where (x.range(of: "pokemon") != nil), let x where (x.range(of: "pok√©mon") != nil):
            return "√ßa me fait penser √† mon pote Hoot-hoot, j'esp√®re qu'il a √©volu√© en Noarfang"
            
//tous les case de mani√®re g√©n√©rale
        case let x where x.hasPrefix("hello"), let x where x.hasPrefix("salut"),let x where x.hasPrefix("bonsoir"), let x where x.hasPrefix("hey"), let x where x.hasPrefix("bonjour"):
            return "Bienvenue cher calviniste! N'h√©site surtout pas √† me poser des questions. Tu peux trouver une liste de questions sur la Dashboard."
            
        case let x where x.hasPrefix("coucou"):
            return "Pour qui tu me prends?! Je suis une chouette!"
            
        case let x where (x.range(of:"manger") != nil), let x where (x.range(of:"faim") != nil), let x where (x.range(of:"dalle") != nil):
            return "Tu peux aller manger √† la caf√©t√©ria de calvin, ou bien trouver un resto dans le coin (Radar De Poche, Luigia, etc)"
            
        case "calvin":
            return "#icicestcalvin"
            
        case "qui es-tu?":
            return "Je suis Minerva, chouette de Minerve,d√©esse de la guerre, de la sagesse, de la strat√©gie, de l'intelligence, de la pens√©e √©lev√©e, des lettres, des arts, de la musique et de l'industrie./n Oui √ßa fait beaucoup."
            
        case "je suis en retard":
            let excuse = Int(arc4random_uniform(5))
            switch excuse {
            case 0:
                return "Tu pensais que j'allais pr√©venir le prof?"
            case 1:
                return "Excuse n¬∞1: mon bus √©tait en retard."
            case 2:
                return "Excuse n¬∞2: mon r√©veil n'a pas sonn√©."
            case 3:
                return "Excuse n¬∞3: Cette nuit, le CERN a accidentellent cr√©√© un mini trou noir, ce qui a courb√© l'espace temps √† c√¥t√© de chez moi. De ce fait, mon r√©veil ayant sonn√© √† 6h40 dans mon r√©f√©rentiel correspondait en fait √† 7h50 dans le r√©f√©rentiel de calvin (mieux vaut sortir cette excuse en physique, pas en fran√ßais). ;)"
            default:
                return " D√®s fois, il ne faut pas aller chercher trop loin. Excuse n¬∞4: en fait, il n'y a pas vraiment de raison. J'ai tout fait comme d'habitude, mais je suis quand m√™me arriv√© en retard, d√©sol√©"
            }
        
        case let x where x.hasPrefix("quelle note j'aurais en"), let x where x.hasPrefix("quelle note aurais-je en"), let x where x.hasPrefix("quel note vais-je"), let x where x.hasPrefix("quel note je vais"), let x where x.hasPrefix("combien aurais-je"), let x where x.hasPrefix("combien j'aurais en"), let x where x.hasPrefix("combien aurai-je"), let x where x.hasPrefix("combien j'aurai en"):
            let note = Int(arc4random_uniform(14))
            switch note {
            case 0:
                return "1: avoue t'as rien r√©vis√©"
            case 1:
                return "2: √ßa va, tu aurais pu faire pire"
            case 2:
                return "3: c'est d√©j√† la moyenne pour certains profs."
            case 3:
                return "3.5: ouch!"
            case 4,5:
                return "4: bravo, tu as la moyenne!"
            case 6,7,8:
                return "4.5: un bonne note, enfin tout est relatif..."
            case 9,10,11:
                return "5: tu as r√©ussi"
            case 12:
                return "5.5: c'est presque parfait!"
            default:
                return "6: c'est parfait!!"
            }
        
        case "que penses-tu de candolle?", "qui est candolle?":
            return "Candolle? Seymaz servante."
        
        case "es-tu un robot ou un animal":
            return "Entre les deux il n'y a qu'un pas."
            
        case let x where x.hasPrefix("je t'attraperai"):
            return "Pas sans Masterball."
            
        case "es-tu un m√¢le ou une femelle?":
            return "On me pose souvent cette question vexante..."
            
        case "qui est ton cr√©ateur", "qui t'as cr√©√©":
            return "Jonnn... D√©sol√© mais il m'emp√™che de prononcer son nom."
            
        case "comment vas-tu?","comment √ßa va?", "√ßa va?","√ßa va bien?":
            return "Mieux que Candolle en tout cas mwouahahaha... D√©sol√©."
            
        case "qui est ton ma√Ætre?", "qui est ton cr√©ateur", "c'est qui qui t'a cr√©√©":
            return "Jona... Secret professionnel."
            
        case let x where x.hasPrefix("qui est le pire prof"):
            return "Je n'ai pas le droit de le dire."
            
        case "r√©viser, c'est douter de son talent":
            return "Voici une belle citation d'un calviniste ayant redoubl√©. Exemple √† suivre."
            
        case let x where x.hasPrefix("t'as combien de moyenne"), let x where x.hasPrefix("combien as-tu de moyenne"):
            return "Il vaut mieux que tu ne le sache pas"
        
        case "quel est ton film pr√©f√©r√©?":
            return "Le royaume de Ga'Hoole, je vous le conseille vivement"
            
        case "c'est chouette":
            return "Eh mais c'est ma r√©plique!"
        
        case "√† quoi tu sers?", "√† quoi sers-tu?":
            return "A vrai dire... A rien."
            
          // au mieux m√†j du nombre de plaintes
        case "je dois travailler", "je dois √©tudier", "je dois r√©viser","j'ai pas envie de faire mes devoirs", "j'ai pas envie de travailler", "j'ai pas envie d'√©tudier", "j'ai pas envie de r√©viser", "j'ai pas envie de faire mes devoirs":
            return "j'ai d√©j√† re√ßu 186 plaintes cette semaine, la votre a √©t√© plac√©e en file d'attente. Merci de votre compr√©hension."
            
        case "Je suis Jean Calvin.":
            return "Bienvenue chez vous, ma√Ætre"
        
        case "combien p√®se-tu?":
            return "Moins que toi en tout cas üòâ"
            
        case "tu m'√©nerves", "tu es √©nervant":
            return "Vous savez tr√®s bien que je ne voulais pas vous offenser."
        
        case "quel est le sens de la vie?":
            return "La r√©ponse se trouve √† l'ext√©rieur, pas √† l'int√©rieur"
         
        case "parle-moi de calvin":
            let calvinRandom=Int(arc4random_uniform(6))
            switch calvinRandom {
            case 0:
                return "Le coll√®ge calvin a √©t√© b√¢ti en 1559"
            case 1:
                return "un passage secret se trouve derri√®re la grille m√©tallique au sous-sol du b√¢timent Alice-Rivaz"
            case 2:
                return "Il y a de la bi√®re pas ch√®re lors des Pastanques"
            case 3:
                return "Le to√Æt d'un des anciens b√¢timents de calvin est pench√©"
            case 4:
                return "Il existe s√ªrement un m√©chanisme cach√© qui permet d'activer les 4 petits jets de la fontaine."
            case 5:
                return "Henri Dunant, fondateur de la Croix-Rouge, a fr√©quent√© le coll√®ge Calvin. Il n'a malheureusement pas fini ses √©tudes car il n'avait pas les notes."
            default:
                return "Il ya beaucoup de points communs entre Poudlard et Calvin: un b√¢timent historique, des chouettes √† l'int√©rieur, une directrice du nom de Dolor√®s,..."
            }
            //√† modif
            case "quelle heure est-il?":
                return "\(Date())"
            
            case "qui est le meilleur prof?":
                return "emplacement √† vendre. Veuillez contacter les d√©veloppeurs si vous voulez que votre nom figure ici."
       
            case "andro√Ød ou apple?","apple ou andro√Ød?":
                return "Clairement Apple"
            
            case "warriors ou cavaliers?", "cavaliers ou warriors?":
                return "Golden State!"
            
            case "je suis fatigu√©":
                return "ne t'inqui√®te t'es pas le/la seul(e)"
            
            case "je t'aime", "veux-tu m'√©pouser?", "veux-tu sortir avec moi?", "est-ce que tu veux m'√©pouser?", "est-ce que tu veux sortir avec moi?", "est-ce que tu veux te marier avec moi?", "veux-tu te marier avec moi?":
                return "D√©sol√© mais je pr√©f√®re les chouettes üíî"
            
            case "je dois y aller":
            return "ikanaide!"
            
            case let x where (x.range(of: "chante") != nil), let x where (x.range(of: "chanter") != nil):
                return " Hou hou, fait le hibou. Chouette, chouette se dit la chouette! J'ai oubli√© la suite."
            
            case "raconte-moi une blague", "raconte moi une blague":
                let blague = Int(arc4random_uniform(3))
                switch blague {
                case 0:
                    return "Pourquoi la chouette traverse-t-elle la rue? Parce qu'elle... En fait c'est mieux que tu ne connaisses pas la r√©ponse. Je dis √ßa pour ton bien."
                case 1:
                    return "Candolle est un coll√®ge."
                case 2:
                    return "N'h√©sitez pas √† envoyer vos suggestions de blagues aux d√©veloppeurs!"
                default:
                    return "D√©sol√© mais les d√©veloppeurs n'ont pas beaucoup d'imagination."
                }
            case "merci":
                return "A votre service."
            
            case "qui es-tu?":
                return "Je suis √† la fois ton pass√© et ton futur, √† la fois ton ombre et tes ailes, √† la fois tout est rien... Je sui Minerva, la chouette de Calvin."
            
            case "est-ce que tu mens?", "mens-tu?":
                return "Minerva ne ment jamais."
            //r√©gler probl√®me espacement entre un mot et ?!
            //...ou...

//recherche de salle
            case "a001", "a002","a003", "a004":
                return "Face √† la chouette sur la fontaine, aller au rez-de-chauss√©e du b√¢timent √† gauche puis tourner √† gauche."
            case "a005","a006":
                return "Face √† la chouette sur la fontaine, aller au rez-de-chauss√©e du b√¢timent √† gauche puis tourner √† droite."
            case "a101","a102","a103","a104","a105":
                return "Face √† la chouette sur la fontaine, aller au 1√®re √©tage du b√¢timent √† gauche puis tourner √† gauche."
            case "a106","a107":
                return "Face √† la chouette sur la fontaine, aller au 1√®re √©tage du b√¢timent √† gauche puis tourner √† droite."
            case "a109","a110","a111":
                return "Face √† la chouette sur la fontaine, aller au 1√®re √©tage du b√¢timent √† droite.C'est une des salles en face des vitres."
            case "a112","a113":
                return "Face √† la chouette sur la fontaine, aller au 1√®re √©tage du b√¢timent √† droite puis tourner √† droite."
            case "a220","a221":
                return "Face √† la chouette sur la fontaine, aller au 2√®me √©tage du b√¢timent √† droite."
            case "salle des ma√Ætres":
                return "Entrer au fond de la caf√©t√©ria et prendre la porte au fond √† gauche."
            case "caf√©t√©ria":
                return "Bon faut pas abuser non plus..."
            case "bureau de gestion":
                return "Face √† la chouette sur la fontaine, aller au 2√®me √©tage du b√¢timent √† gauche (escaliers √† l'int√©rieur)."
            case let x where x.hasPrefix("A2"):
                return "Face √† la chouette sur la fontaine, aller au 2√®me √©tage du b√¢timent √† gauche (escaliers √† l'int√©rieur)."
            
            case "301","303","304":
                return "Aller au sous-sol du b√¢timent 300 puis tourner √† gauche."
            case "305","306","307":
                return "Aller au sous-sol du b√¢timent 300 puis tourner √† droite."
            case "311","313","314":
                return "Aller au 1√®re √©tage du b√¢timent 300 puis tourner √† gauche."
            case "315","316","317","318":
                return "Aller au 1√®re √©tage du b√¢timent 300 puis tourner √† droite."
            case "321","323","324":
                return "Aller au 2e √©tage du b√¢timent 300 puis tourner √† gauche."
            case "325","326","327","328":
                return "Aller au 2e √©tage du b√¢timent 300 puis tourner √† droite."
            case "331","332":
                return "Aller au 3e √©tage du b√¢timent 300."
            
            case "huissier":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† gauche. Le bureau de l'huissier se trouve sur ta droite."
            case "infirmerie":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† gauche. L'infirmerie se trouve tout au fond √† gauche."
            case "h1","h2":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† gauche. La salle se trouve sur la droite."
            case "h3","h4":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. La salle se trouve sur la gauche."
            case "service social","conseill√®re sociale", "compta","bi5","bureau biologie":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. La salle se trouve sur la droite."
            
            case "assistant biologie":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. Continuer tout droit, puis passer les deux portes et tourner √† gauche."
            case "531","532","533","534","535","bi0","bi1","bi2","bi3","bi4":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. Continuer tout droit, puis passer les deux portes et tourner √† droite."
            
            case "bureau physique","py1","py2","py3","py4":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. Continuer tout droit, puis monter les escaliers et tourner √† droite. C'est une des salles sur ta gauche."
            case "py5","assistant physique","py6":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. Continuer tout droit, puis monter les escaliers et tourner √† droite. C'est une des salles sur ta droite."
        case "assistant chimie":
            return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. Continuer tout droit, puis monter les escaliers et tourner √† gauche. La salle se trouve sur la gauche."
        case "ch1","ch2","ch3","ch4","bureau chimie":
            return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. Continuer tout droit, puis monter les escaliers et tourner √† gauche, puis encore √† droite."
        
        case "ap1","ap2","ap3","ap4","496","497","laboratoire photo":
            return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. Continuer tout droit, puis monter les escaliers jusqu'au 2e √©tage."
            
        case "biblioth√®que":
            return "Descendre les escalier juste devant le 'nouveau' b√¢timent puis tourner √† droite."
        case "salle de r√©union","mav":
                return "Descendre les escalier juste devant le 'nouveau' b√¢timent puis tourner √† gauche."
        case "info1","info2","info3","info":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. Continuer tout droit, puis descendre les escaliers et continuer tout droit. La salle se trouve au fond du couloir √† gauche."
        case "bureau informatique", "atelier m√©canique", "llmed","mullmed":
                return "Rentrer dans le 'nouveau' b√¢timent puis tourner √† droite. Continuer tout droit, puis descendre les escaliers et continuer tout droit. Enfin tourner √† gauche au milieu des casiers."
        case "ep1","ep2","ep3","bureau ep":
                return "en montant les escaliers de Calvin, tourner √† gauche jusqu'√† trouver une porte m√©tallique. Descendre les escaliers jusqu'au fond, passer la porte, et enfin tourner √† droite puis √† gauche."
        case "ep4","ep5","ping-pong","arts martiaux":
                return "en montant les escaliers de Calvin, tourner √† gauche jusqu'√† trouver une porte m√©tallique. Descendre les escaliers jusqu'au fond, passer la porte, et enfin tourner √† gauche"
            
        case "wc":
                return "Voici la liste des toilettes √† calvin: \n1.dans le b√¢timent r√©nov√© gauche, tourner √† gauche au rez \n2. au 1√®re √©tage entre les 2 b√¢timents r√©nov√©s \n3.WC femme au 1√®re √©tage √† gauche du b√¢timent 300 \n4.WC homme au 2e √©tage √† gauche du b√¢timent 300 \n5.en face de la biblioth√®que, l√† o√π se trouve la salle de r√©union \n6.WC femme en chimie \n7.WC homme en biologie \n8.√† toi de le d√©couvrirüòâ"
            
            
            
            
            
            
// r√©ponses vagues
        // quel est... que penses tu de...
            
        case let x where x.hasPrefix("que penses-tu de"):
            return "Tu pr√©f√®res ne pas conna√Ætre mon avis..."
            
        case let x where x.hasPrefix("qui est"):
            return "D√©sol√© mais je ne connais pas tout le monde"

        case let x where (x.range(of: "math") != nil), let x where (x.range(of: "maths") != nil), let x where (x.range(of: "math√©matiques") != nil):
            return "√©chec et maths! (This joke is copyright ¬© Anna S. 1998-2017. All rights reserved.)"
            
        case let x where x.hasPrefix("tu devrais"):
            return "Bon conseil, j'en prends note."
            
        case let x where x.hasPrefix("je dois"), let x where x.hasPrefix("j'ai pas envie de"):
            return "Fallait √™tre une chouette ü¶â"
            
        case let x where x.hasPrefix("J'aurais d√ª"):
            return "Cela ne sert √† rien de regretter"
            
        case let x where (x.range(of: "r√©viser") != nil):
            return "R√©viser, c'est douter de son talent. Citation d'un calviniste qui a redoubl√©."
            
        case let x where x.hasPrefix("pourquoi"), let x where x.hasPrefix("comment"):
            let answer = Int(arc4random_uniform(8))
            switch answer {
            case 0:
                return "J'en sais rien. D'ailleurs je voudrai bien aussi conna√Ætre la r√©ponse."
            case 1:
                return "D'ailleurs t'as vu le match hier soir?"
            case 2:
                return "Demande √† Jean, moi je sais pas"
            case 3:
                return "Hein? Tu disais quoi? D√©sol√© j'ai √©t√© distrait par une autre chouette."
            case 4:
                return "Ce n'est qu'en unifiant la m√©chanique quantique et la relativit√© g√©n√©rale que je pourrai trouver une r√©ponse √† ta question"
            case 5:
                return "Tu m'as pris pour un prof?!"
            case 6:
                return "Mmmh... Oh! Regarde! Une licorne qui vole!"
            case 7:
                return "Demande aux d√©veloppeurs"
            default:
                return "Tu sais, il vaut mieux que certaines questions demeurent sans r√©ponse. Ou l'inverse, si tu vois ce que je veux dire."
            }
            
            case let x where (x.range(of: "ou") != nil):
                return "Tel est la question, n'est-ce pas?"
            
            
        default:
            let defaultNumber = question.characters.count % 8
            if defaultNumber == 1 {
                return "Humm...√ßa d√©pend."
            } else if defaultNumber == 2 {
                return "Attends je vais boire un coup √† la fontaine."
            } else if defaultNumber==3 {
                return "Repose moi la question demain."
            } else if defaultNumber==4 {
                return "Peut-√™tre"
            } else if defaultNumber==5 {
                return "Demande √† S...Si...Siri."
            } else if defaultNumber==6 {
                return "Je ne comprends pas."
            } else {
                return "ok"
            }
            
            
            }
        }
}
